/*
 * Copyright (c) 2007 BUSINESS OBJECTS SOFTWARE LIMITED
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *     * Redistributions of source code must retain the above copyright notice,
 *       this list of conditions and the following disclaimer.
 *
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *
 *     * Neither the name of Business Objects nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * RTPartialApp.java
 * Creation date: Mar 17, 2006
 * By: rcypher
 */
package org.openquark.cal.internal.runtime.lecc;

import java.util.concurrent.atomic.AtomicInteger;

import org.openquark.cal.runtime.CALExecutorException;
import org.openquark.cal.runtime.CalValue;

/**
 * Representations for partial applications of a supercombinator. When code
 * generation encounters a partial application of a known SC code is generated
 * to create an instance of RTPartialApp. A partial application node behaves
 * like a regular supercombinator or arity n where n is the arity of the
 * original supercombinator less the number of applied arguments. The node
 * overrides the appropriate fnS/L methods to complete the application and
 * invoke the original SC.
 *
 * The advantage of this is a more compact graph representation (i.e. fewer
 * RTApplication nodes0. Also it is easier to reduce a more compact graph.
 *
 * @author rcypher
 */
public abstract class RTPartialApp extends RTSupercombinator {

    /** number of instances of this class. Used for statistics purposes. */
    private static final AtomicInteger nInstances = new AtomicInteger(0);
    
    RTPartialApp() {
        if (LECCMachineConfiguration.generateAppCounts()) {
            nInstances.incrementAndGet();
        }
    }
    
    public static final int getNInstances() {
        return nInstances.get();
    }
    
    public static final void resetNInstances() {
        nInstances.set(0);
    }     

    /**
     * A partial application node is a supercombinator whose arity is the
     * original supercombinator arity less the number of applied arguments.
     *
     * @return the arity of this supercombinator.
     */
    @Override
    abstract public int getArity();
    /**
     * Because the partial application nodes are supercombinators the arg count
     * will always be zero.
     *
     * @return int the arg count.
     */
    @Override
    public final int getArgCount() {
        return 0;
    }

    /*
     * (non-Javadoc)
     *
     * @see org.openquark.cal.internal.runtime.lecc.RTSupercombinator#getModuleName()
     */
    @Override
    public String getModuleName() {
        return getSupercombinator().getModuleName();
    }

    /*
     * (non-Javadoc)
     *
     * @see org.openquark.cal.internal.runtime.lecc.RTSupercombinator#getUnqualifiedName()
     */
    @Override
    public String getUnqualifiedName() {
        return getSupercombinator().getUnqualifiedName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public final String getQualifiedName() {
        return getModuleName() + "." + getUnqualifiedName();
    }

    abstract RTSupercombinator getSupercombinator();

    // ///////////////////////////////////////////////////////////////////////////
    // The code for the following inner classes is generated using the helper
    // class PartialAppNodeGenerator.
    // ////////////////////////////////////////////////////////////////////////////

    /**
     * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
     * This class is used to represent a function created by
     * partial application of an arity 2 function.
     */
    public static abstract class _2 extends RTPartialApp {

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 2 function to 1 argument(s).
         */
        public static final class _1 extends _2 {

            private final RTSupercombinator function;
            private final RTValue arg1;

            public _1 (final RTSupercombinator function, final RTValue arg1) {
                assert (function != null && arg1 != null ) : "Invalid argument value in RTPartialApp._2._1";
                this.function = function;
                this.arg1 = arg1;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg2 = rootNode.getArgValue();
                return function.f2L(arg1, RTValue.lastRef(arg2, (arg2 = null)), ec);
            }

            @Override
            public RTValue f1L(RTValue arg2, final RTExecutionContext ec) throws CALExecutorException {
                return function.f2L(arg1, RTValue.lastRef(arg2, (arg2 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 1) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

    }

    /**
     * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
     * This class is used to represent a function created by
     * partial application of an arity 3 function.
     */
    public static abstract class _3 extends RTPartialApp {

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 3 function to 1 argument(s).
         */
        public static final class _1 extends _3 {

            private final RTSupercombinator function;
            private final RTValue arg1;

            public _1 (final RTSupercombinator function, final RTValue arg1) {
                assert (function != null && arg1 != null ) : "Invalid argument value in RTPartialApp._3._1";
                this.function = function;
                this.arg1 = arg1;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 2;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg3 = rootNode.getArgValue();
                RTValue arg2 = rootNode.prevArg().getArgValue();
                return function.f3L(arg1, RTValue.lastRef(arg2, (arg2 = null)), RTValue.lastRef(arg3, (arg3 = null)), ec);
            }

            @Override
            public RTValue f2L(RTValue arg2, RTValue arg3, final RTExecutionContext ec) throws CALExecutorException {
                return function.f3L(arg1, RTValue.lastRef(arg2, (arg2 = null)), RTValue.lastRef(arg3, (arg3 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 1) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 3 function to 2 argument(s).
         */
        public static final class _2 extends _3 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;

            public _2 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2) {
                assert (function != null && arg1 != null && arg2 != null ) : "Invalid argument value in RTPartialApp._3._2";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg3 = rootNode.getArgValue();
                return function.f3L(arg1, arg2, RTValue.lastRef(arg3, (arg3 = null)), ec);
            }

            @Override
            public RTValue f1L(RTValue arg3, final RTExecutionContext ec) throws CALExecutorException {
                return function.f3L(arg1, arg2, RTValue.lastRef(arg3, (arg3 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 2;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 2) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

    }

    /**
     * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
     * This class is used to represent a function created by
     * partial application of an arity 4 function.
     */
    public static abstract class _4 extends RTPartialApp {

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 4 function to 1 argument(s).
         */
        public static final class _1 extends _4 {

            private final RTSupercombinator function;
            private final RTValue arg1;

            public _1 (final RTSupercombinator function, final RTValue arg1) {
                assert (function != null && arg1 != null ) : "Invalid argument value in RTPartialApp._4._1";
                this.function = function;
                this.arg1 = arg1;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 3;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg4 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg3 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg2 = currentRootNode.prevArg().getArgValue();
                return function.f4L(arg1, RTValue.lastRef(arg2, (arg2 = null)), RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), ec);
            }

            @Override
            public RTValue f3L(RTValue arg2, RTValue arg3, RTValue arg4, final RTExecutionContext ec) throws CALExecutorException {
                return function.f4L(arg1, RTValue.lastRef(arg2, (arg2 = null)), RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 1) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 4 function to 2 argument(s).
         */
        public static final class _2 extends _4 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;

            public _2 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2) {
                assert (function != null && arg1 != null && arg2 != null ) : "Invalid argument value in RTPartialApp._4._2";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 2;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg4 = rootNode.getArgValue();
                RTValue arg3 = rootNode.prevArg().getArgValue();
                return function.f4L(arg1, arg2, RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), ec);
            }

            @Override
            public RTValue f2L(RTValue arg3, RTValue arg4, final RTExecutionContext ec) throws CALExecutorException {
                return function.f4L(arg1, arg2, RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 2;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 2) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 4 function to 3 argument(s).
         */
        public static final class _3 extends _4 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;

            public _3 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null ) : "Invalid argument value in RTPartialApp._4._3";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg4 = rootNode.getArgValue();
                return function.f4L(arg1, arg2, arg3, RTValue.lastRef(arg4, (arg4 = null)), ec);
            }

            @Override
            public RTValue f1L(RTValue arg4, final RTExecutionContext ec) throws CALExecutorException {
                return function.f4L(arg1, arg2, arg3, RTValue.lastRef(arg4, (arg4 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 3;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 3) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

    }

    /**
     * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
     * This class is used to represent a function created by
     * partial application of an arity 5 function.
     */
    public static abstract class _5 extends RTPartialApp {

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 5 function to 1 argument(s).
         */
        public static final class _1 extends _5 {

            private final RTSupercombinator function;
            private final RTValue arg1;

            public _1 (final RTSupercombinator function, final RTValue arg1) {
                assert (function != null && arg1 != null ) : "Invalid argument value in RTPartialApp._5._1";
                this.function = function;
                this.arg1 = arg1;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 4;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg5 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg4 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg3 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg2 = currentRootNode.prevArg().getArgValue();
                return function.f5L(arg1, RTValue.lastRef(arg2, (arg2 = null)), RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), ec);
            }

            @Override
            public RTValue f4L(RTValue arg2, RTValue arg3, RTValue arg4, RTValue arg5, final RTExecutionContext ec) throws CALExecutorException {
                return function.f5L(arg1, RTValue.lastRef(arg2, (arg2 = null)), RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 1) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 5 function to 2 argument(s).
         */
        public static final class _2 extends _5 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;

            public _2 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2) {
                assert (function != null && arg1 != null && arg2 != null ) : "Invalid argument value in RTPartialApp._5._2";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 3;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg5 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg4 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg3 = currentRootNode.prevArg().getArgValue();
                return function.f5L(arg1, arg2, RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), ec);
            }

            @Override
            public RTValue f3L(RTValue arg3, RTValue arg4, RTValue arg5, final RTExecutionContext ec) throws CALExecutorException {
                return function.f5L(arg1, arg2, RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 2;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 2) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 5 function to 3 argument(s).
         */
        public static final class _3 extends _5 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;

            public _3 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null ) : "Invalid argument value in RTPartialApp._5._3";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 2;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg5 = rootNode.getArgValue();
                RTValue arg4 = rootNode.prevArg().getArgValue();
                return function.f5L(arg1, arg2, arg3, RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), ec);
            }

            @Override
            public RTValue f2L(RTValue arg4, RTValue arg5, final RTExecutionContext ec) throws CALExecutorException {
                return function.f5L(arg1, arg2, arg3, RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 3;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 3) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 5 function to 4 argument(s).
         */
        public static final class _4 extends _5 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;

            public _4 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null ) : "Invalid argument value in RTPartialApp._5._4";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg5 = rootNode.getArgValue();
                return function.f5L(arg1, arg2, arg3, arg4, RTValue.lastRef(arg5, (arg5 = null)), ec);
            }

            @Override
            public RTValue f1L(RTValue arg5, final RTExecutionContext ec) throws CALExecutorException {
                return function.f5L(arg1, arg2, arg3, arg4, RTValue.lastRef(arg5, (arg5 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 4;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 4) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

    }

    /**
     * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
     * This class is used to represent a function created by
     * partial application of an arity 6 function.
     */
    public static abstract class _6 extends RTPartialApp {

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 6 function to 1 argument(s).
         */
        public static final class _1 extends _6 {

            private final RTSupercombinator function;
            private final RTValue arg1;

            public _1 (final RTSupercombinator function, final RTValue arg1) {
                assert (function != null && arg1 != null ) : "Invalid argument value in RTPartialApp._6._1";
                this.function = function;
                this.arg1 = arg1;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 5;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg6 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg5 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg4 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg3 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg2 = currentRootNode.prevArg().getArgValue();
                return function.f6L(arg1, RTValue.lastRef(arg2, (arg2 = null)), RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), ec);
            }

            @Override
            public RTValue f5L(RTValue arg2, RTValue arg3, RTValue arg4, RTValue arg5, RTValue arg6, final RTExecutionContext ec) throws CALExecutorException {
                return function.f6L(arg1, RTValue.lastRef(arg2, (arg2 = null)), RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 1) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 6 function to 2 argument(s).
         */
        public static final class _2 extends _6 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;

            public _2 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2) {
                assert (function != null && arg1 != null && arg2 != null ) : "Invalid argument value in RTPartialApp._6._2";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 4;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg6 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg5 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg4 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg3 = currentRootNode.prevArg().getArgValue();
                return function.f6L(arg1, arg2, RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), ec);
            }

            @Override
            public RTValue f4L(RTValue arg3, RTValue arg4, RTValue arg5, RTValue arg6, final RTExecutionContext ec) throws CALExecutorException {
                return function.f6L(arg1, arg2, RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 2;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 2) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 6 function to 3 argument(s).
         */
        public static final class _3 extends _6 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;

            public _3 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null ) : "Invalid argument value in RTPartialApp._6._3";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 3;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg6 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg5 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg4 = currentRootNode.prevArg().getArgValue();
                return function.f6L(arg1, arg2, arg3, RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), ec);
            }

            @Override
            public RTValue f3L(RTValue arg4, RTValue arg5, RTValue arg6, final RTExecutionContext ec) throws CALExecutorException {
                return function.f6L(arg1, arg2, arg3, RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 3;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 3) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 6 function to 4 argument(s).
         */
        public static final class _4 extends _6 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;

            public _4 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null ) : "Invalid argument value in RTPartialApp._6._4";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 2;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg6 = rootNode.getArgValue();
                RTValue arg5 = rootNode.prevArg().getArgValue();
                return function.f6L(arg1, arg2, arg3, arg4, RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), ec);
            }

            @Override
            public RTValue f2L(RTValue arg5, RTValue arg6, final RTExecutionContext ec) throws CALExecutorException {
                return function.f6L(arg1, arg2, arg3, arg4, RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 4;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 4) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 6 function to 5 argument(s).
         */
        public static final class _5 extends _6 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;

            public _5 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null ) : "Invalid argument value in RTPartialApp._6._5";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg6 = rootNode.getArgValue();
                return function.f6L(arg1, arg2, arg3, arg4, arg5, RTValue.lastRef(arg6, (arg6 = null)), ec);
            }

            @Override
            public RTValue f1L(RTValue arg6, final RTExecutionContext ec) throws CALExecutorException {
                return function.f6L(arg1, arg2, arg3, arg4, arg5, RTValue.lastRef(arg6, (arg6 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 5;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 5) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

    }

    /**
     * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
     * This class is used to represent a function created by
     * partial application of an arity 7 function.
     */
    public static abstract class _7 extends RTPartialApp {

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 7 function to 1 argument(s).
         */
        public static final class _1 extends _7 {

            private final RTSupercombinator function;
            private final RTValue arg1;

            public _1 (final RTSupercombinator function, final RTValue arg1) {
                assert (function != null && arg1 != null ) : "Invalid argument value in RTPartialApp._7._1";
                this.function = function;
                this.arg1 = arg1;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 6;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg7 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg6 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg5 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg4 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg3 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg2 = currentRootNode.prevArg().getArgValue();
                return function.f7L(arg1, RTValue.lastRef(arg2, (arg2 = null)), RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), ec);
            }

            @Override
            public RTValue f6L(RTValue arg2, RTValue arg3, RTValue arg4, RTValue arg5, RTValue arg6, RTValue arg7, final RTExecutionContext ec) throws CALExecutorException {
                return function.f7L(arg1, RTValue.lastRef(arg2, (arg2 = null)), RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 1) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 7 function to 2 argument(s).
         */
        public static final class _2 extends _7 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;

            public _2 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2) {
                assert (function != null && arg1 != null && arg2 != null ) : "Invalid argument value in RTPartialApp._7._2";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 5;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg7 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg6 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg5 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg4 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg3 = currentRootNode.prevArg().getArgValue();
                return function.f7L(arg1, arg2, RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), ec);
            }

            @Override
            public RTValue f5L(RTValue arg3, RTValue arg4, RTValue arg5, RTValue arg6, RTValue arg7, final RTExecutionContext ec) throws CALExecutorException {
                return function.f7L(arg1, arg2, RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 2;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 2) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 7 function to 3 argument(s).
         */
        public static final class _3 extends _7 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;

            public _3 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null ) : "Invalid argument value in RTPartialApp._7._3";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 4;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg7 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg6 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg5 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg4 = currentRootNode.prevArg().getArgValue();
                return function.f7L(arg1, arg2, arg3, RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), ec);
            }

            @Override
            public RTValue f4L(RTValue arg4, RTValue arg5, RTValue arg6, RTValue arg7, final RTExecutionContext ec) throws CALExecutorException {
                return function.f7L(arg1, arg2, arg3, RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 3;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 3) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 7 function to 4 argument(s).
         */
        public static final class _4 extends _7 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;

            public _4 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null ) : "Invalid argument value in RTPartialApp._7._4";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 3;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg7 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg6 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg5 = currentRootNode.prevArg().getArgValue();
                return function.f7L(arg1, arg2, arg3, arg4, RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), ec);
            }

            @Override
            public RTValue f3L(RTValue arg5, RTValue arg6, RTValue arg7, final RTExecutionContext ec) throws CALExecutorException {
                return function.f7L(arg1, arg2, arg3, arg4, RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 4;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 4) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 7 function to 5 argument(s).
         */
        public static final class _5 extends _7 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;

            public _5 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null ) : "Invalid argument value in RTPartialApp._7._5";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 2;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg7 = rootNode.getArgValue();
                RTValue arg6 = rootNode.prevArg().getArgValue();
                return function.f7L(arg1, arg2, arg3, arg4, arg5, RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), ec);
            }

            @Override
            public RTValue f2L(RTValue arg6, RTValue arg7, final RTExecutionContext ec) throws CALExecutorException {
                return function.f7L(arg1, arg2, arg3, arg4, arg5, RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 5;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 5) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 7 function to 6 argument(s).
         */
        public static final class _6 extends _7 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;

            public _6 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null ) : "Invalid argument value in RTPartialApp._7._6";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg7 = rootNode.getArgValue();
                return function.f7L(arg1, arg2, arg3, arg4, arg5, arg6, RTValue.lastRef(arg7, (arg7 = null)), ec);
            }

            @Override
            public RTValue f1L(RTValue arg7, final RTExecutionContext ec) throws CALExecutorException {
                return function.f7L(arg1, arg2, arg3, arg4, arg5, arg6, RTValue.lastRef(arg7, (arg7 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 6;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 6) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

    }

    /**
     * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
     * This class is used to represent a function created by
     * partial application of an arity 8 function.
     */
    public static abstract class _8 extends RTPartialApp {

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 8 function to 1 argument(s).
         */
        public static final class _1 extends _8 {

            private final RTSupercombinator function;
            private final RTValue arg1;

            public _1 (final RTSupercombinator function, final RTValue arg1) {
                assert (function != null && arg1 != null ) : "Invalid argument value in RTPartialApp._8._1";
                this.function = function;
                this.arg1 = arg1;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 7;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg8 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg7 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg4 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg3 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg2 = currentRootNode.prevArg().getArgValue();
                return function.f8L(arg1, RTValue.lastRef(arg2, (arg2 = null)), RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), ec);
            }

            @Override
            public RTValue f7L(RTValue arg2, RTValue arg3, RTValue arg4, RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, final RTExecutionContext ec) throws CALExecutorException {
                return function.f8L(arg1, RTValue.lastRef(arg2, (arg2 = null)), RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 1) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 8 function to 2 argument(s).
         */
        public static final class _2 extends _8 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;

            public _2 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2) {
                assert (function != null && arg1 != null && arg2 != null ) : "Invalid argument value in RTPartialApp._8._2";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 6;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg8 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg7 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg4 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg3 = currentRootNode.prevArg().getArgValue();
                return function.f8L(arg1, arg2, RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), ec);
            }

            @Override
            public RTValue f6L(RTValue arg3, RTValue arg4, RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, final RTExecutionContext ec) throws CALExecutorException {
                return function.f8L(arg1, arg2, RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 2;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 2) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 8 function to 3 argument(s).
         */
        public static final class _3 extends _8 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;

            public _3 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null ) : "Invalid argument value in RTPartialApp._8._3";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 5;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg8 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg7 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg4 = currentRootNode.prevArg().getArgValue();
                return function.f8L(arg1, arg2, arg3, RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), ec);
            }

            @Override
            public RTValue f5L(RTValue arg4, RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, final RTExecutionContext ec) throws CALExecutorException {
                return function.f8L(arg1, arg2, arg3, RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 3;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 3) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 8 function to 4 argument(s).
         */
        public static final class _4 extends _8 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;

            public _4 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null ) : "Invalid argument value in RTPartialApp._8._4";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 4;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg8 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg7 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = currentRootNode.prevArg().getArgValue();
                return function.f8L(arg1, arg2, arg3, arg4, RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), ec);
            }

            @Override
            public RTValue f4L(RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, final RTExecutionContext ec) throws CALExecutorException {
                return function.f8L(arg1, arg2, arg3, arg4, RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 4;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 4) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 8 function to 5 argument(s).
         */
        public static final class _5 extends _8 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;

            public _5 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null ) : "Invalid argument value in RTPartialApp._8._5";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 3;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg8 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg7 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg6 = currentRootNode.prevArg().getArgValue();
                return function.f8L(arg1, arg2, arg3, arg4, arg5, RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), ec);
            }

            @Override
            public RTValue f3L(RTValue arg6, RTValue arg7, RTValue arg8, final RTExecutionContext ec) throws CALExecutorException {
                return function.f8L(arg1, arg2, arg3, arg4, arg5, RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 5;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 5) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 8 function to 6 argument(s).
         */
        public static final class _6 extends _8 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;

            public _6 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null ) : "Invalid argument value in RTPartialApp._8._6";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 2;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg8 = rootNode.getArgValue();
                RTValue arg7 = rootNode.prevArg().getArgValue();
                return function.f8L(arg1, arg2, arg3, arg4, arg5, arg6, RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), ec);
            }

            @Override
            public RTValue f2L(RTValue arg7, RTValue arg8, final RTExecutionContext ec) throws CALExecutorException {
                return function.f8L(arg1, arg2, arg3, arg4, arg5, arg6, RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 6;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 6) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 8 function to 7 argument(s).
         */
        public static final class _7 extends _8 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;

            public _7 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null ) : "Invalid argument value in RTPartialApp._8._7";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg8 = rootNode.getArgValue();
                return function.f8L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, RTValue.lastRef(arg8, (arg8 = null)), ec);
            }

            @Override
            public RTValue f1L(RTValue arg8, final RTExecutionContext ec) throws CALExecutorException {
                return function.f8L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, RTValue.lastRef(arg8, (arg8 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 7;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 7) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

    }

    /**
     * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
     * This class is used to represent a function created by
     * partial application of an arity 9 function.
     */
    public static abstract class _9 extends RTPartialApp {

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 9 function to 1 argument(s).
         */
        public static final class _1 extends _9 {

            private final RTSupercombinator function;
            private final RTValue arg1;

            public _1 (final RTSupercombinator function, final RTValue arg1) {
                assert (function != null && arg1 != null ) : "Invalid argument value in RTPartialApp._9._1";
                this.function = function;
                this.arg1 = arg1;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 8;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg9 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg8 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg4 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg3 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg2 = currentRootNode.prevArg().getArgValue();
                return function.f9L(arg1, RTValue.lastRef(arg2, (arg2 = null)), RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), ec);
            }

            @Override
            public RTValue f8L(RTValue arg2, RTValue arg3, RTValue arg4, RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, final RTExecutionContext ec) throws CALExecutorException {
                return function.f9L(arg1, RTValue.lastRef(arg2, (arg2 = null)), RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 1) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 9 function to 2 argument(s).
         */
        public static final class _2 extends _9 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;

            public _2 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2) {
                assert (function != null && arg1 != null && arg2 != null ) : "Invalid argument value in RTPartialApp._9._2";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 7;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg9 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg8 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg4 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg3 = currentRootNode.prevArg().getArgValue();
                return function.f9L(arg1, arg2, RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), ec);
            }

            @Override
            public RTValue f7L(RTValue arg3, RTValue arg4, RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, final RTExecutionContext ec) throws CALExecutorException {
                return function.f9L(arg1, arg2, RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 2;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 2) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 9 function to 3 argument(s).
         */
        public static final class _3 extends _9 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;

            public _3 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null ) : "Invalid argument value in RTPartialApp._9._3";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 6;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg9 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg8 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg4 = currentRootNode.prevArg().getArgValue();
                return function.f9L(arg1, arg2, arg3, RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), ec);
            }

            @Override
            public RTValue f6L(RTValue arg4, RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, final RTExecutionContext ec) throws CALExecutorException {
                return function.f9L(arg1, arg2, arg3, RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 3;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 3) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 9 function to 4 argument(s).
         */
        public static final class _4 extends _9 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;

            public _4 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null ) : "Invalid argument value in RTPartialApp._9._4";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 5;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg9 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg8 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = currentRootNode.prevArg().getArgValue();
                return function.f9L(arg1, arg2, arg3, arg4, RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), ec);
            }

            @Override
            public RTValue f5L(RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, final RTExecutionContext ec) throws CALExecutorException {
                return function.f9L(arg1, arg2, arg3, arg4, RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 4;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 4) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 9 function to 5 argument(s).
         */
        public static final class _5 extends _9 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;

            public _5 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null ) : "Invalid argument value in RTPartialApp._9._5";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 4;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg9 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg8 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = currentRootNode.prevArg().getArgValue();
                return function.f9L(arg1, arg2, arg3, arg4, arg5, RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), ec);
            }

            @Override
            public RTValue f4L(RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, final RTExecutionContext ec) throws CALExecutorException {
                return function.f9L(arg1, arg2, arg3, arg4, arg5, RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 5;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 5) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 9 function to 6 argument(s).
         */
        public static final class _6 extends _9 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;

            public _6 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null ) : "Invalid argument value in RTPartialApp._9._6";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 3;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg9 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg8 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg7 = currentRootNode.prevArg().getArgValue();
                return function.f9L(arg1, arg2, arg3, arg4, arg5, arg6, RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), ec);
            }

            @Override
            public RTValue f3L(RTValue arg7, RTValue arg8, RTValue arg9, final RTExecutionContext ec) throws CALExecutorException {
                return function.f9L(arg1, arg2, arg3, arg4, arg5, arg6, RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 6;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 6) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 9 function to 7 argument(s).
         */
        public static final class _7 extends _9 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;

            public _7 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null ) : "Invalid argument value in RTPartialApp._9._7";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 2;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg9 = rootNode.getArgValue();
                RTValue arg8 = rootNode.prevArg().getArgValue();
                return function.f9L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), ec);
            }

            @Override
            public RTValue f2L(RTValue arg8, RTValue arg9, final RTExecutionContext ec) throws CALExecutorException {
                return function.f9L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 7;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 7) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 9 function to 8 argument(s).
         */
        public static final class _8 extends _9 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;

            public _8 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null ) : "Invalid argument value in RTPartialApp._9._8";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg9 = rootNode.getArgValue();
                return function.f9L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, RTValue.lastRef(arg9, (arg9 = null)), ec);
            }

            @Override
            public RTValue f1L(RTValue arg9, final RTExecutionContext ec) throws CALExecutorException {
                return function.f9L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, RTValue.lastRef(arg9, (arg9 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 8;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 8) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

    }

    /**
     * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
     * This class is used to represent a function created by
     * partial application of an arity 10 function.
     */
    public static abstract class _10 extends RTPartialApp {

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 10 function to 1 argument(s).
         */
        public static final class _1 extends _10 {

            private final RTSupercombinator function;
            private final RTValue arg1;

            public _1 (final RTSupercombinator function, final RTValue arg1) {
                assert (function != null && arg1 != null ) : "Invalid argument value in RTPartialApp._10._1";
                this.function = function;
                this.arg1 = arg1;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 9;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg10 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg9 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg4 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg3 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg2 = currentRootNode.prevArg().getArgValue();
                return function.f10L(arg1, RTValue.lastRef(arg2, (arg2 = null)), RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), ec);
            }

            @Override
            public RTValue f9L(RTValue arg2, RTValue arg3, RTValue arg4, RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, final RTExecutionContext ec) throws CALExecutorException {
                return function.f10L(arg1, RTValue.lastRef(arg2, (arg2 = null)), RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 1) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 10 function to 2 argument(s).
         */
        public static final class _2 extends _10 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;

            public _2 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2) {
                assert (function != null && arg1 != null && arg2 != null ) : "Invalid argument value in RTPartialApp._10._2";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 8;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg10 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg9 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg4 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg3 = currentRootNode.prevArg().getArgValue();
                return function.f10L(arg1, arg2, RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), ec);
            }

            @Override
            public RTValue f8L(RTValue arg3, RTValue arg4, RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, final RTExecutionContext ec) throws CALExecutorException {
                return function.f10L(arg1, arg2, RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 2;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 2) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 10 function to 3 argument(s).
         */
        public static final class _3 extends _10 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;

            public _3 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null ) : "Invalid argument value in RTPartialApp._10._3";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 7;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg10 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg9 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg4 = currentRootNode.prevArg().getArgValue();
                return function.f10L(arg1, arg2, arg3, RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), ec);
            }

            @Override
            public RTValue f7L(RTValue arg4, RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, final RTExecutionContext ec) throws CALExecutorException {
                return function.f10L(arg1, arg2, arg3, RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 3;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 3) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 10 function to 4 argument(s).
         */
        public static final class _4 extends _10 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;

            public _4 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null ) : "Invalid argument value in RTPartialApp._10._4";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 6;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg10 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg9 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = currentRootNode.prevArg().getArgValue();
                return function.f10L(arg1, arg2, arg3, arg4, RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), ec);
            }

            @Override
            public RTValue f6L(RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, final RTExecutionContext ec) throws CALExecutorException {
                return function.f10L(arg1, arg2, arg3, arg4, RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 4;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 4) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 10 function to 5 argument(s).
         */
        public static final class _5 extends _10 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;

            public _5 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null ) : "Invalid argument value in RTPartialApp._10._5";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 5;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg10 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg9 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = currentRootNode.prevArg().getArgValue();
                return function.f10L(arg1, arg2, arg3, arg4, arg5, RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), ec);
            }

            @Override
            public RTValue f5L(RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, final RTExecutionContext ec) throws CALExecutorException {
                return function.f10L(arg1, arg2, arg3, arg4, arg5, RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 5;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 5) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 10 function to 6 argument(s).
         */
        public static final class _6 extends _10 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;

            public _6 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null ) : "Invalid argument value in RTPartialApp._10._6";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 4;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg10 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg9 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = currentRootNode.prevArg().getArgValue();
                return function.f10L(arg1, arg2, arg3, arg4, arg5, arg6, RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), ec);
            }

            @Override
            public RTValue f4L(RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, final RTExecutionContext ec) throws CALExecutorException {
                return function.f10L(arg1, arg2, arg3, arg4, arg5, arg6, RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 6;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 6) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 10 function to 7 argument(s).
         */
        public static final class _7 extends _10 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;

            public _7 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null ) : "Invalid argument value in RTPartialApp._10._7";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 3;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg10 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg9 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg8 = currentRootNode.prevArg().getArgValue();
                return function.f10L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), ec);
            }

            @Override
            public RTValue f3L(RTValue arg8, RTValue arg9, RTValue arg10, final RTExecutionContext ec) throws CALExecutorException {
                return function.f10L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 7;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 7) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 10 function to 8 argument(s).
         */
        public static final class _8 extends _10 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;

            public _8 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null ) : "Invalid argument value in RTPartialApp._10._8";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 2;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg10 = rootNode.getArgValue();
                RTValue arg9 = rootNode.prevArg().getArgValue();
                return function.f10L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), ec);
            }

            @Override
            public RTValue f2L(RTValue arg9, RTValue arg10, final RTExecutionContext ec) throws CALExecutorException {
                return function.f10L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 8;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 8) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 10 function to 9 argument(s).
         */
        public static final class _9 extends _10 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;
            private final RTValue arg9;

            public _9 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8, final RTValue arg9) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null && arg9 != null ) : "Invalid argument value in RTPartialApp._10._9";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
                this.arg9 = arg9;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg10 = rootNode.getArgValue();
                return function.f10L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, RTValue.lastRef(arg10, (arg10 = null)), ec);
            }

            @Override
            public RTValue f1L(RTValue arg10, final RTExecutionContext ec) throws CALExecutorException {
                return function.f10L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, RTValue.lastRef(arg10, (arg10 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 9;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                case 8:
                    return arg9;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 9) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

    }

    /**
     * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
     * This class is used to represent a function created by
     * partial application of an arity 11 function.
     */
    public static abstract class _11 extends RTPartialApp {

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 11 function to 1 argument(s).
         */
        public static final class _1 extends _11 {

            private final RTSupercombinator function;
            private final RTValue arg1;

            public _1 (final RTSupercombinator function, final RTValue arg1) {
                assert (function != null && arg1 != null ) : "Invalid argument value in RTPartialApp._11._1";
                this.function = function;
                this.arg1 = arg1;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 10;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg11 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg10 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg4 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg3 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg2 = currentRootNode.prevArg().getArgValue();
                return function.f11L(arg1, RTValue.lastRef(arg2, (arg2 = null)), RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), ec);
            }

            @Override
            public RTValue f10L(RTValue arg2, RTValue arg3, RTValue arg4, RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, final RTExecutionContext ec) throws CALExecutorException {
                return function.f11L(arg1, RTValue.lastRef(arg2, (arg2 = null)), RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 1) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 11 function to 2 argument(s).
         */
        public static final class _2 extends _11 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;

            public _2 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2) {
                assert (function != null && arg1 != null && arg2 != null ) : "Invalid argument value in RTPartialApp._11._2";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 9;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg11 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg10 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg4 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg3 = currentRootNode.prevArg().getArgValue();
                return function.f11L(arg1, arg2, RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), ec);
            }

            @Override
            public RTValue f9L(RTValue arg3, RTValue arg4, RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, final RTExecutionContext ec) throws CALExecutorException {
                return function.f11L(arg1, arg2, RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 2;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 2) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 11 function to 3 argument(s).
         */
        public static final class _3 extends _11 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;

            public _3 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null ) : "Invalid argument value in RTPartialApp._11._3";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 8;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg11 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg10 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg4 = currentRootNode.prevArg().getArgValue();
                return function.f11L(arg1, arg2, arg3, RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), ec);
            }

            @Override
            public RTValue f8L(RTValue arg4, RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, final RTExecutionContext ec) throws CALExecutorException {
                return function.f11L(arg1, arg2, arg3, RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 3;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 3) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 11 function to 4 argument(s).
         */
        public static final class _4 extends _11 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;

            public _4 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null ) : "Invalid argument value in RTPartialApp._11._4";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 7;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg11 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg10 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = currentRootNode.prevArg().getArgValue();
                return function.f11L(arg1, arg2, arg3, arg4, RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), ec);
            }

            @Override
            public RTValue f7L(RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, final RTExecutionContext ec) throws CALExecutorException {
                return function.f11L(arg1, arg2, arg3, arg4, RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 4;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 4) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 11 function to 5 argument(s).
         */
        public static final class _5 extends _11 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;

            public _5 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null ) : "Invalid argument value in RTPartialApp._11._5";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 6;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg11 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg10 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = currentRootNode.prevArg().getArgValue();
                return function.f11L(arg1, arg2, arg3, arg4, arg5, RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), ec);
            }

            @Override
            public RTValue f6L(RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, final RTExecutionContext ec) throws CALExecutorException {
                return function.f11L(arg1, arg2, arg3, arg4, arg5, RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 5;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 5) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 11 function to 6 argument(s).
         */
        public static final class _6 extends _11 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;

            public _6 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null ) : "Invalid argument value in RTPartialApp._11._6";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 5;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg11 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg10 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = currentRootNode.prevArg().getArgValue();
                return function.f11L(arg1, arg2, arg3, arg4, arg5, arg6, RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), ec);
            }

            @Override
            public RTValue f5L(RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, final RTExecutionContext ec) throws CALExecutorException {
                return function.f11L(arg1, arg2, arg3, arg4, arg5, arg6, RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 6;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 6) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 11 function to 7 argument(s).
         */
        public static final class _7 extends _11 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;

            public _7 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null ) : "Invalid argument value in RTPartialApp._11._7";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 4;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg11 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg10 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = currentRootNode.prevArg().getArgValue();
                return function.f11L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), ec);
            }

            @Override
            public RTValue f4L(RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, final RTExecutionContext ec) throws CALExecutorException {
                return function.f11L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 7;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 7) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 11 function to 8 argument(s).
         */
        public static final class _8 extends _11 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;

            public _8 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null ) : "Invalid argument value in RTPartialApp._11._8";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 3;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg11 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg10 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg9 = currentRootNode.prevArg().getArgValue();
                return function.f11L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), ec);
            }

            @Override
            public RTValue f3L(RTValue arg9, RTValue arg10, RTValue arg11, final RTExecutionContext ec) throws CALExecutorException {
                return function.f11L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 8;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 8) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 11 function to 9 argument(s).
         */
        public static final class _9 extends _11 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;
            private final RTValue arg9;

            public _9 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8, final RTValue arg9) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null && arg9 != null ) : "Invalid argument value in RTPartialApp._11._9";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
                this.arg9 = arg9;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 2;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg11 = rootNode.getArgValue();
                RTValue arg10 = rootNode.prevArg().getArgValue();
                return function.f11L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), ec);
            }

            @Override
            public RTValue f2L(RTValue arg10, RTValue arg11, final RTExecutionContext ec) throws CALExecutorException {
                return function.f11L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 9;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                case 8:
                    return arg9;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 9) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 11 function to 10 argument(s).
         */
        public static final class _10 extends _11 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;
            private final RTValue arg9;
            private final RTValue arg10;

            public _10 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8, final RTValue arg9, final RTValue arg10) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null && arg9 != null && arg10 != null ) : "Invalid argument value in RTPartialApp._11._10";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
                this.arg9 = arg9;
                this.arg10 = arg10;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg11 = rootNode.getArgValue();
                return function.f11L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, RTValue.lastRef(arg11, (arg11 = null)), ec);
            }

            @Override
            public RTValue f1L(RTValue arg11, final RTExecutionContext ec) throws CALExecutorException {
                return function.f11L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, RTValue.lastRef(arg11, (arg11 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 10;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                case 8:
                    return arg9;
                case 9:
                    return arg10;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 10) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

    }

    /**
     * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
     * This class is used to represent a function created by
     * partial application of an arity 12 function.
     */
    public static abstract class _12 extends RTPartialApp {

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 12 function to 1 argument(s).
         */
        public static final class _1 extends _12 {

            private final RTSupercombinator function;
            private final RTValue arg1;

            public _1 (final RTSupercombinator function, final RTValue arg1) {
                assert (function != null && arg1 != null ) : "Invalid argument value in RTPartialApp._12._1";
                this.function = function;
                this.arg1 = arg1;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 11;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg12 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg11 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg4 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg3 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg2 = currentRootNode.prevArg().getArgValue();
                return function.f12L(arg1, RTValue.lastRef(arg2, (arg2 = null)), RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), ec);
            }

            @Override
            public RTValue f11L(RTValue arg2, RTValue arg3, RTValue arg4, RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, final RTExecutionContext ec) throws CALExecutorException {
                return function.f12L(arg1, RTValue.lastRef(arg2, (arg2 = null)), RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 1) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 12 function to 2 argument(s).
         */
        public static final class _2 extends _12 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;

            public _2 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2) {
                assert (function != null && arg1 != null && arg2 != null ) : "Invalid argument value in RTPartialApp._12._2";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 10;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg12 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg11 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg4 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg3 = currentRootNode.prevArg().getArgValue();
                return function.f12L(arg1, arg2, RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), ec);
            }

            @Override
            public RTValue f10L(RTValue arg3, RTValue arg4, RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, final RTExecutionContext ec) throws CALExecutorException {
                return function.f12L(arg1, arg2, RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 2;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 2) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 12 function to 3 argument(s).
         */
        public static final class _3 extends _12 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;

            public _3 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null ) : "Invalid argument value in RTPartialApp._12._3";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 9;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg12 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg11 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg4 = currentRootNode.prevArg().getArgValue();
                return function.f12L(arg1, arg2, arg3, RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), ec);
            }

            @Override
            public RTValue f9L(RTValue arg4, RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, final RTExecutionContext ec) throws CALExecutorException {
                return function.f12L(arg1, arg2, arg3, RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 3;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 3) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 12 function to 4 argument(s).
         */
        public static final class _4 extends _12 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;

            public _4 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null ) : "Invalid argument value in RTPartialApp._12._4";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 8;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg12 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg11 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = currentRootNode.prevArg().getArgValue();
                return function.f12L(arg1, arg2, arg3, arg4, RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), ec);
            }

            @Override
            public RTValue f8L(RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, final RTExecutionContext ec) throws CALExecutorException {
                return function.f12L(arg1, arg2, arg3, arg4, RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 4;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 4) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 12 function to 5 argument(s).
         */
        public static final class _5 extends _12 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;

            public _5 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null ) : "Invalid argument value in RTPartialApp._12._5";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 7;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg12 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg11 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = currentRootNode.prevArg().getArgValue();
                return function.f12L(arg1, arg2, arg3, arg4, arg5, RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), ec);
            }

            @Override
            public RTValue f7L(RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, final RTExecutionContext ec) throws CALExecutorException {
                return function.f12L(arg1, arg2, arg3, arg4, arg5, RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 5;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 5) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 12 function to 6 argument(s).
         */
        public static final class _6 extends _12 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;

            public _6 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null ) : "Invalid argument value in RTPartialApp._12._6";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 6;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg12 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg11 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = currentRootNode.prevArg().getArgValue();
                return function.f12L(arg1, arg2, arg3, arg4, arg5, arg6, RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), ec);
            }

            @Override
            public RTValue f6L(RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, final RTExecutionContext ec) throws CALExecutorException {
                return function.f12L(arg1, arg2, arg3, arg4, arg5, arg6, RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 6;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 6) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 12 function to 7 argument(s).
         */
        public static final class _7 extends _12 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;

            public _7 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null ) : "Invalid argument value in RTPartialApp._12._7";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 5;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg12 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg11 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = currentRootNode.prevArg().getArgValue();
                return function.f12L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), ec);
            }

            @Override
            public RTValue f5L(RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, final RTExecutionContext ec) throws CALExecutorException {
                return function.f12L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 7;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 7) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 12 function to 8 argument(s).
         */
        public static final class _8 extends _12 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;

            public _8 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null ) : "Invalid argument value in RTPartialApp._12._8";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 4;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg12 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg11 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = currentRootNode.prevArg().getArgValue();
                return function.f12L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), ec);
            }

            @Override
            public RTValue f4L(RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, final RTExecutionContext ec) throws CALExecutorException {
                return function.f12L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 8;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 8) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 12 function to 9 argument(s).
         */
        public static final class _9 extends _12 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;
            private final RTValue arg9;

            public _9 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8, final RTValue arg9) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null && arg9 != null ) : "Invalid argument value in RTPartialApp._12._9";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
                this.arg9 = arg9;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 3;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg12 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg11 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg10 = currentRootNode.prevArg().getArgValue();
                return function.f12L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), ec);
            }

            @Override
            public RTValue f3L(RTValue arg10, RTValue arg11, RTValue arg12, final RTExecutionContext ec) throws CALExecutorException {
                return function.f12L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 9;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                case 8:
                    return arg9;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 9) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 12 function to 10 argument(s).
         */
        public static final class _10 extends _12 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;
            private final RTValue arg9;
            private final RTValue arg10;

            public _10 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8, final RTValue arg9, final RTValue arg10) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null && arg9 != null && arg10 != null ) : "Invalid argument value in RTPartialApp._12._10";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
                this.arg9 = arg9;
                this.arg10 = arg10;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 2;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg12 = rootNode.getArgValue();
                RTValue arg11 = rootNode.prevArg().getArgValue();
                return function.f12L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), ec);
            }

            @Override
            public RTValue f2L(RTValue arg11, RTValue arg12, final RTExecutionContext ec) throws CALExecutorException {
                return function.f12L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 10;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                case 8:
                    return arg9;
                case 9:
                    return arg10;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 10) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 12 function to 11 argument(s).
         */
        public static final class _11 extends _12 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;
            private final RTValue arg9;
            private final RTValue arg10;
            private final RTValue arg11;

            public _11 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8, final RTValue arg9, final RTValue arg10, final RTValue arg11) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null && arg9 != null && arg10 != null && arg11 != null ) : "Invalid argument value in RTPartialApp._12._11";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
                this.arg9 = arg9;
                this.arg10 = arg10;
                this.arg11 = arg11;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg12 = rootNode.getArgValue();
                return function.f12L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, RTValue.lastRef(arg12, (arg12 = null)), ec);
            }

            @Override
            public RTValue f1L(RTValue arg12, final RTExecutionContext ec) throws CALExecutorException {
                return function.f12L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, RTValue.lastRef(arg12, (arg12 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 11;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                case 8:
                    return arg9;
                case 9:
                    return arg10;
                case 10:
                    return arg11;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 11) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

    }

    /**
     * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
     * This class is used to represent a function created by
     * partial application of an arity 13 function.
     */
    public static abstract class _13 extends RTPartialApp {

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 13 function to 1 argument(s).
         */
        public static final class _1 extends _13 {

            private final RTSupercombinator function;
            private final RTValue arg1;

            public _1 (final RTSupercombinator function, final RTValue arg1) {
                assert (function != null && arg1 != null ) : "Invalid argument value in RTPartialApp._13._1";
                this.function = function;
                this.arg1 = arg1;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 12;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg13 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg12 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg11 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg4 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg3 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg2 = currentRootNode.prevArg().getArgValue();
                return function.f13L(arg1, RTValue.lastRef(arg2, (arg2 = null)), RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), ec);
            }

            @Override
            public RTValue f12L(RTValue arg2, RTValue arg3, RTValue arg4, RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, RTValue arg13, final RTExecutionContext ec) throws CALExecutorException {
                return function.f13L(arg1, RTValue.lastRef(arg2, (arg2 = null)), RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 1) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 13 function to 2 argument(s).
         */
        public static final class _2 extends _13 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;

            public _2 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2) {
                assert (function != null && arg1 != null && arg2 != null ) : "Invalid argument value in RTPartialApp._13._2";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 11;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg13 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg12 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg11 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg4 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg3 = currentRootNode.prevArg().getArgValue();
                return function.f13L(arg1, arg2, RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), ec);
            }

            @Override
            public RTValue f11L(RTValue arg3, RTValue arg4, RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, RTValue arg13, final RTExecutionContext ec) throws CALExecutorException {
                return function.f13L(arg1, arg2, RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 2;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 2) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 13 function to 3 argument(s).
         */
        public static final class _3 extends _13 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;

            public _3 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null ) : "Invalid argument value in RTPartialApp._13._3";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 10;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg13 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg12 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg11 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg4 = currentRootNode.prevArg().getArgValue();
                return function.f13L(arg1, arg2, arg3, RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), ec);
            }

            @Override
            public RTValue f10L(RTValue arg4, RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, RTValue arg13, final RTExecutionContext ec) throws CALExecutorException {
                return function.f13L(arg1, arg2, arg3, RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 3;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 3) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 13 function to 4 argument(s).
         */
        public static final class _4 extends _13 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;

            public _4 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null ) : "Invalid argument value in RTPartialApp._13._4";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 9;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg13 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg12 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg11 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = currentRootNode.prevArg().getArgValue();
                return function.f13L(arg1, arg2, arg3, arg4, RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), ec);
            }

            @Override
            public RTValue f9L(RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, RTValue arg13, final RTExecutionContext ec) throws CALExecutorException {
                return function.f13L(arg1, arg2, arg3, arg4, RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 4;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 4) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 13 function to 5 argument(s).
         */
        public static final class _5 extends _13 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;

            public _5 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null ) : "Invalid argument value in RTPartialApp._13._5";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 8;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg13 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg12 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg11 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = currentRootNode.prevArg().getArgValue();
                return function.f13L(arg1, arg2, arg3, arg4, arg5, RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), ec);
            }

            @Override
            public RTValue f8L(RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, RTValue arg13, final RTExecutionContext ec) throws CALExecutorException {
                return function.f13L(arg1, arg2, arg3, arg4, arg5, RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 5;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 5) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 13 function to 6 argument(s).
         */
        public static final class _6 extends _13 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;

            public _6 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null ) : "Invalid argument value in RTPartialApp._13._6";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 7;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg13 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg12 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg11 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = currentRootNode.prevArg().getArgValue();
                return function.f13L(arg1, arg2, arg3, arg4, arg5, arg6, RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), ec);
            }

            @Override
            public RTValue f7L(RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, RTValue arg13, final RTExecutionContext ec) throws CALExecutorException {
                return function.f13L(arg1, arg2, arg3, arg4, arg5, arg6, RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 6;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 6) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 13 function to 7 argument(s).
         */
        public static final class _7 extends _13 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;

            public _7 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null ) : "Invalid argument value in RTPartialApp._13._7";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 6;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg13 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg12 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg11 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = currentRootNode.prevArg().getArgValue();
                return function.f13L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), ec);
            }

            @Override
            public RTValue f6L(RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, RTValue arg13, final RTExecutionContext ec) throws CALExecutorException {
                return function.f13L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 7;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 7) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 13 function to 8 argument(s).
         */
        public static final class _8 extends _13 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;

            public _8 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null ) : "Invalid argument value in RTPartialApp._13._8";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 5;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg13 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg12 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg11 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = currentRootNode.prevArg().getArgValue();
                return function.f13L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), ec);
            }

            @Override
            public RTValue f5L(RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, RTValue arg13, final RTExecutionContext ec) throws CALExecutorException {
                return function.f13L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 8;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 8) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 13 function to 9 argument(s).
         */
        public static final class _9 extends _13 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;
            private final RTValue arg9;

            public _9 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8, final RTValue arg9) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null && arg9 != null ) : "Invalid argument value in RTPartialApp._13._9";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
                this.arg9 = arg9;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 4;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg13 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg12 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg11 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg10 = currentRootNode.prevArg().getArgValue();
                return function.f13L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), ec);
            }

            @Override
            public RTValue f4L(RTValue arg10, RTValue arg11, RTValue arg12, RTValue arg13, final RTExecutionContext ec) throws CALExecutorException {
                return function.f13L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 9;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                case 8:
                    return arg9;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 9) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 13 function to 10 argument(s).
         */
        public static final class _10 extends _13 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;
            private final RTValue arg9;
            private final RTValue arg10;

            public _10 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8, final RTValue arg9, final RTValue arg10) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null && arg9 != null && arg10 != null ) : "Invalid argument value in RTPartialApp._13._10";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
                this.arg9 = arg9;
                this.arg10 = arg10;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 3;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg13 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg12 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg11 = currentRootNode.prevArg().getArgValue();
                return function.f13L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), ec);
            }

            @Override
            public RTValue f3L(RTValue arg11, RTValue arg12, RTValue arg13, final RTExecutionContext ec) throws CALExecutorException {
                return function.f13L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 10;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                case 8:
                    return arg9;
                case 9:
                    return arg10;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 10) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 13 function to 11 argument(s).
         */
        public static final class _11 extends _13 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;
            private final RTValue arg9;
            private final RTValue arg10;
            private final RTValue arg11;

            public _11 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8, final RTValue arg9, final RTValue arg10, final RTValue arg11) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null && arg9 != null && arg10 != null && arg11 != null ) : "Invalid argument value in RTPartialApp._13._11";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
                this.arg9 = arg9;
                this.arg10 = arg10;
                this.arg11 = arg11;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 2;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg13 = rootNode.getArgValue();
                RTValue arg12 = rootNode.prevArg().getArgValue();
                return function.f13L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), ec);
            }

            @Override
            public RTValue f2L(RTValue arg12, RTValue arg13, final RTExecutionContext ec) throws CALExecutorException {
                return function.f13L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 11;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                case 8:
                    return arg9;
                case 9:
                    return arg10;
                case 10:
                    return arg11;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 11) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 13 function to 12 argument(s).
         */
        public static final class _12 extends _13 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;
            private final RTValue arg9;
            private final RTValue arg10;
            private final RTValue arg11;
            private final RTValue arg12;

            public _12 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8, final RTValue arg9, final RTValue arg10, final RTValue arg11, final RTValue arg12) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null && arg9 != null && arg10 != null && arg11 != null && arg12 != null ) : "Invalid argument value in RTPartialApp._13._12";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
                this.arg9 = arg9;
                this.arg10 = arg10;
                this.arg11 = arg11;
                this.arg12 = arg12;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg13 = rootNode.getArgValue();
                return function.f13L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, RTValue.lastRef(arg13, (arg13 = null)), ec);
            }

            @Override
            public RTValue f1L(RTValue arg13, final RTExecutionContext ec) throws CALExecutorException {
                return function.f13L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, RTValue.lastRef(arg13, (arg13 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 12;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                case 8:
                    return arg9;
                case 9:
                    return arg10;
                case 10:
                    return arg11;
                case 11:
                    return arg12;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 12) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

    }

    /**
     * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
     * This class is used to represent a function created by
     * partial application of an arity 14 function.
     */
    public static abstract class _14 extends RTPartialApp {

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 14 function to 1 argument(s).
         */
        public static final class _1 extends _14 {

            private final RTSupercombinator function;
            private final RTValue arg1;

            public _1 (final RTSupercombinator function, final RTValue arg1) {
                assert (function != null && arg1 != null ) : "Invalid argument value in RTPartialApp._14._1";
                this.function = function;
                this.arg1 = arg1;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 13;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg14 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg13 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg12 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg11 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg4 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg3 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg2 = currentRootNode.prevArg().getArgValue();
                return function.f14L(arg1, RTValue.lastRef(arg2, (arg2 = null)), RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), ec);
            }

            @Override
            public RTValue f13L(RTValue arg2, RTValue arg3, RTValue arg4, RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, RTValue arg13, RTValue arg14, final RTExecutionContext ec) throws CALExecutorException {
                return function.f14L(arg1, RTValue.lastRef(arg2, (arg2 = null)), RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 1) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 14 function to 2 argument(s).
         */
        public static final class _2 extends _14 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;

            public _2 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2) {
                assert (function != null && arg1 != null && arg2 != null ) : "Invalid argument value in RTPartialApp._14._2";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 12;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg14 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg13 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg12 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg11 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg4 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg3 = currentRootNode.prevArg().getArgValue();
                return function.f14L(arg1, arg2, RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), ec);
            }

            @Override
            public RTValue f12L(RTValue arg3, RTValue arg4, RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, RTValue arg13, RTValue arg14, final RTExecutionContext ec) throws CALExecutorException {
                return function.f14L(arg1, arg2, RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 2;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 2) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 14 function to 3 argument(s).
         */
        public static final class _3 extends _14 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;

            public _3 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null ) : "Invalid argument value in RTPartialApp._14._3";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 11;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg14 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg13 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg12 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg11 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg4 = currentRootNode.prevArg().getArgValue();
                return function.f14L(arg1, arg2, arg3, RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), ec);
            }

            @Override
            public RTValue f11L(RTValue arg4, RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, RTValue arg13, RTValue arg14, final RTExecutionContext ec) throws CALExecutorException {
                return function.f14L(arg1, arg2, arg3, RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 3;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 3) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 14 function to 4 argument(s).
         */
        public static final class _4 extends _14 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;

            public _4 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null ) : "Invalid argument value in RTPartialApp._14._4";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 10;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg14 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg13 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg12 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg11 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = currentRootNode.prevArg().getArgValue();
                return function.f14L(arg1, arg2, arg3, arg4, RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), ec);
            }

            @Override
            public RTValue f10L(RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, RTValue arg13, RTValue arg14, final RTExecutionContext ec) throws CALExecutorException {
                return function.f14L(arg1, arg2, arg3, arg4, RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 4;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 4) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 14 function to 5 argument(s).
         */
        public static final class _5 extends _14 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;

            public _5 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null ) : "Invalid argument value in RTPartialApp._14._5";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 9;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg14 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg13 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg12 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg11 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = currentRootNode.prevArg().getArgValue();
                return function.f14L(arg1, arg2, arg3, arg4, arg5, RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), ec);
            }

            @Override
            public RTValue f9L(RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, RTValue arg13, RTValue arg14, final RTExecutionContext ec) throws CALExecutorException {
                return function.f14L(arg1, arg2, arg3, arg4, arg5, RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 5;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 5) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 14 function to 6 argument(s).
         */
        public static final class _6 extends _14 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;

            public _6 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null ) : "Invalid argument value in RTPartialApp._14._6";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 8;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg14 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg13 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg12 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg11 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = currentRootNode.prevArg().getArgValue();
                return function.f14L(arg1, arg2, arg3, arg4, arg5, arg6, RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), ec);
            }

            @Override
            public RTValue f8L(RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, RTValue arg13, RTValue arg14, final RTExecutionContext ec) throws CALExecutorException {
                return function.f14L(arg1, arg2, arg3, arg4, arg5, arg6, RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 6;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 6) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 14 function to 7 argument(s).
         */
        public static final class _7 extends _14 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;

            public _7 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null ) : "Invalid argument value in RTPartialApp._14._7";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 7;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg14 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg13 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg12 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg11 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = currentRootNode.prevArg().getArgValue();
                return function.f14L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), ec);
            }

            @Override
            public RTValue f7L(RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, RTValue arg13, RTValue arg14, final RTExecutionContext ec) throws CALExecutorException {
                return function.f14L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 7;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 7) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 14 function to 8 argument(s).
         */
        public static final class _8 extends _14 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;

            public _8 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null ) : "Invalid argument value in RTPartialApp._14._8";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 6;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg14 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg13 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg12 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg11 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = currentRootNode.prevArg().getArgValue();
                return function.f14L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), ec);
            }

            @Override
            public RTValue f6L(RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, RTValue arg13, RTValue arg14, final RTExecutionContext ec) throws CALExecutorException {
                return function.f14L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 8;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 8) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 14 function to 9 argument(s).
         */
        public static final class _9 extends _14 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;
            private final RTValue arg9;

            public _9 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8, final RTValue arg9) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null && arg9 != null ) : "Invalid argument value in RTPartialApp._14._9";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
                this.arg9 = arg9;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 5;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg14 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg13 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg12 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg11 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg10 = currentRootNode.prevArg().getArgValue();
                return function.f14L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), ec);
            }

            @Override
            public RTValue f5L(RTValue arg10, RTValue arg11, RTValue arg12, RTValue arg13, RTValue arg14, final RTExecutionContext ec) throws CALExecutorException {
                return function.f14L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 9;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                case 8:
                    return arg9;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 9) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 14 function to 10 argument(s).
         */
        public static final class _10 extends _14 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;
            private final RTValue arg9;
            private final RTValue arg10;

            public _10 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8, final RTValue arg9, final RTValue arg10) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null && arg9 != null && arg10 != null ) : "Invalid argument value in RTPartialApp._14._10";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
                this.arg9 = arg9;
                this.arg10 = arg10;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 4;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg14 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg13 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg12 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg11 = currentRootNode.prevArg().getArgValue();
                return function.f14L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), ec);
            }

            @Override
            public RTValue f4L(RTValue arg11, RTValue arg12, RTValue arg13, RTValue arg14, final RTExecutionContext ec) throws CALExecutorException {
                return function.f14L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 10;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                case 8:
                    return arg9;
                case 9:
                    return arg10;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 10) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 14 function to 11 argument(s).
         */
        public static final class _11 extends _14 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;
            private final RTValue arg9;
            private final RTValue arg10;
            private final RTValue arg11;

            public _11 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8, final RTValue arg9, final RTValue arg10, final RTValue arg11) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null && arg9 != null && arg10 != null && arg11 != null ) : "Invalid argument value in RTPartialApp._14._11";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
                this.arg9 = arg9;
                this.arg10 = arg10;
                this.arg11 = arg11;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 3;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg14 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg13 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg12 = currentRootNode.prevArg().getArgValue();
                return function.f14L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), ec);
            }

            @Override
            public RTValue f3L(RTValue arg12, RTValue arg13, RTValue arg14, final RTExecutionContext ec) throws CALExecutorException {
                return function.f14L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 11;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                case 8:
                    return arg9;
                case 9:
                    return arg10;
                case 10:
                    return arg11;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 11) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 14 function to 12 argument(s).
         */
        public static final class _12 extends _14 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;
            private final RTValue arg9;
            private final RTValue arg10;
            private final RTValue arg11;
            private final RTValue arg12;

            public _12 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8, final RTValue arg9, final RTValue arg10, final RTValue arg11, final RTValue arg12) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null && arg9 != null && arg10 != null && arg11 != null && arg12 != null ) : "Invalid argument value in RTPartialApp._14._12";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
                this.arg9 = arg9;
                this.arg10 = arg10;
                this.arg11 = arg11;
                this.arg12 = arg12;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 2;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg14 = rootNode.getArgValue();
                RTValue arg13 = rootNode.prevArg().getArgValue();
                return function.f14L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), ec);
            }

            @Override
            public RTValue f2L(RTValue arg13, RTValue arg14, final RTExecutionContext ec) throws CALExecutorException {
                return function.f14L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 12;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                case 8:
                    return arg9;
                case 9:
                    return arg10;
                case 10:
                    return arg11;
                case 11:
                    return arg12;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 12) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 14 function to 13 argument(s).
         */
        public static final class _13 extends _14 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;
            private final RTValue arg9;
            private final RTValue arg10;
            private final RTValue arg11;
            private final RTValue arg12;
            private final RTValue arg13;

            public _13 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8, final RTValue arg9, final RTValue arg10, final RTValue arg11, final RTValue arg12, final RTValue arg13) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null && arg9 != null && arg10 != null && arg11 != null && arg12 != null && arg13 != null ) : "Invalid argument value in RTPartialApp._14._13";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
                this.arg9 = arg9;
                this.arg10 = arg10;
                this.arg11 = arg11;
                this.arg12 = arg12;
                this.arg13 = arg13;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg14 = rootNode.getArgValue();
                return function.f14L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, RTValue.lastRef(arg14, (arg14 = null)), ec);
            }

            @Override
            public RTValue f1L(RTValue arg14, final RTExecutionContext ec) throws CALExecutorException {
                return function.f14L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, RTValue.lastRef(arg14, (arg14 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 13;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                case 8:
                    return arg9;
                case 9:
                    return arg10;
                case 10:
                    return arg11;
                case 11:
                    return arg12;
                case 12:
                    return arg13;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 13) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

    }

    /**
     * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
     * This class is used to represent a function created by
     * partial application of an arity 15 function.
     */
    public static abstract class _15 extends RTPartialApp {

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 15 function to 1 argument(s).
         */
        public static final class _1 extends _15 {

            private final RTSupercombinator function;
            private final RTValue arg1;

            public _1 (final RTSupercombinator function, final RTValue arg1) {
                assert (function != null && arg1 != null ) : "Invalid argument value in RTPartialApp._15._1";
                this.function = function;
                this.arg1 = arg1;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 14;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg15 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg14 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg13 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg12 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg11 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg4 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg3 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg2 = currentRootNode.prevArg().getArgValue();
                return function.f15L(arg1, RTValue.lastRef(arg2, (arg2 = null)), RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            @Override
            public RTValue f14L(RTValue arg2, RTValue arg3, RTValue arg4, RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, RTValue arg13, RTValue arg14, RTValue arg15, final RTExecutionContext ec) throws CALExecutorException {
                return function.f15L(arg1, RTValue.lastRef(arg2, (arg2 = null)), RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 1) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 15 function to 2 argument(s).
         */
        public static final class _2 extends _15 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;

            public _2 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2) {
                assert (function != null && arg1 != null && arg2 != null ) : "Invalid argument value in RTPartialApp._15._2";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 13;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg15 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg14 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg13 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg12 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg11 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg4 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg3 = currentRootNode.prevArg().getArgValue();
                return function.f15L(arg1, arg2, RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            @Override
            public RTValue f13L(RTValue arg3, RTValue arg4, RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, RTValue arg13, RTValue arg14, RTValue arg15, final RTExecutionContext ec) throws CALExecutorException {
                return function.f15L(arg1, arg2, RTValue.lastRef(arg3, (arg3 = null)), RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 2;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 2) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 15 function to 3 argument(s).
         */
        public static final class _3 extends _15 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;

            public _3 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null ) : "Invalid argument value in RTPartialApp._15._3";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 12;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg15 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg14 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg13 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg12 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg11 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg4 = currentRootNode.prevArg().getArgValue();
                return function.f15L(arg1, arg2, arg3, RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            @Override
            public RTValue f12L(RTValue arg4, RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, RTValue arg13, RTValue arg14, RTValue arg15, final RTExecutionContext ec) throws CALExecutorException {
                return function.f15L(arg1, arg2, arg3, RTValue.lastRef(arg4, (arg4 = null)), RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 3;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 3) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 15 function to 4 argument(s).
         */
        public static final class _4 extends _15 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;

            public _4 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null ) : "Invalid argument value in RTPartialApp._15._4";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 11;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg15 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg14 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg13 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg12 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg11 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg5 = currentRootNode.prevArg().getArgValue();
                return function.f15L(arg1, arg2, arg3, arg4, RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            @Override
            public RTValue f11L(RTValue arg5, RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, RTValue arg13, RTValue arg14, RTValue arg15, final RTExecutionContext ec) throws CALExecutorException {
                return function.f15L(arg1, arg2, arg3, arg4, RTValue.lastRef(arg5, (arg5 = null)), RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 4;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 4) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 15 function to 5 argument(s).
         */
        public static final class _5 extends _15 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;

            public _5 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null ) : "Invalid argument value in RTPartialApp._15._5";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 10;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg15 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg14 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg13 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg12 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg11 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg6 = currentRootNode.prevArg().getArgValue();
                return function.f15L(arg1, arg2, arg3, arg4, arg5, RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            @Override
            public RTValue f10L(RTValue arg6, RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, RTValue arg13, RTValue arg14, RTValue arg15, final RTExecutionContext ec) throws CALExecutorException {
                return function.f15L(arg1, arg2, arg3, arg4, arg5, RTValue.lastRef(arg6, (arg6 = null)), RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 5;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 5) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 15 function to 6 argument(s).
         */
        public static final class _6 extends _15 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;

            public _6 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null ) : "Invalid argument value in RTPartialApp._15._6";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 9;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg15 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg14 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg13 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg12 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg11 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg7 = currentRootNode.prevArg().getArgValue();
                return function.f15L(arg1, arg2, arg3, arg4, arg5, arg6, RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            @Override
            public RTValue f9L(RTValue arg7, RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, RTValue arg13, RTValue arg14, RTValue arg15, final RTExecutionContext ec) throws CALExecutorException {
                return function.f15L(arg1, arg2, arg3, arg4, arg5, arg6, RTValue.lastRef(arg7, (arg7 = null)), RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 6;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 6) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 15 function to 7 argument(s).
         */
        public static final class _7 extends _15 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;

            public _7 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null ) : "Invalid argument value in RTPartialApp._15._7";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 8;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg15 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg14 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg13 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg12 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg11 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg8 = currentRootNode.prevArg().getArgValue();
                return function.f15L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            @Override
            public RTValue f8L(RTValue arg8, RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, RTValue arg13, RTValue arg14, RTValue arg15, final RTExecutionContext ec) throws CALExecutorException {
                return function.f15L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, RTValue.lastRef(arg8, (arg8 = null)), RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 7;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 7) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 15 function to 8 argument(s).
         */
        public static final class _8 extends _15 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;

            public _8 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null ) : "Invalid argument value in RTPartialApp._15._8";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 7;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg15 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg14 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg13 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg12 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg11 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg10 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg9 = currentRootNode.prevArg().getArgValue();
                return function.f15L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            @Override
            public RTValue f7L(RTValue arg9, RTValue arg10, RTValue arg11, RTValue arg12, RTValue arg13, RTValue arg14, RTValue arg15, final RTExecutionContext ec) throws CALExecutorException {
                return function.f15L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, RTValue.lastRef(arg9, (arg9 = null)), RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 8;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 8) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 15 function to 9 argument(s).
         */
        public static final class _9 extends _15 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;
            private final RTValue arg9;

            public _9 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8, final RTValue arg9) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null && arg9 != null ) : "Invalid argument value in RTPartialApp._15._9";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
                this.arg9 = arg9;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 6;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg15 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg14 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg13 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg12 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg11 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg10 = currentRootNode.prevArg().getArgValue();
                return function.f15L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            @Override
            public RTValue f6L(RTValue arg10, RTValue arg11, RTValue arg12, RTValue arg13, RTValue arg14, RTValue arg15, final RTExecutionContext ec) throws CALExecutorException {
                return function.f15L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, RTValue.lastRef(arg10, (arg10 = null)), RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 9;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                case 8:
                    return arg9;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 9) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 15 function to 10 argument(s).
         */
        public static final class _10 extends _15 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;
            private final RTValue arg9;
            private final RTValue arg10;

            public _10 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8, final RTValue arg9, final RTValue arg10) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null && arg9 != null && arg10 != null ) : "Invalid argument value in RTPartialApp._15._10";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
                this.arg9 = arg9;
                this.arg10 = arg10;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 5;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg15 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg14 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg13 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg12 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg11 = currentRootNode.prevArg().getArgValue();
                return function.f15L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            @Override
            public RTValue f5L(RTValue arg11, RTValue arg12, RTValue arg13, RTValue arg14, RTValue arg15, final RTExecutionContext ec) throws CALExecutorException {
                return function.f15L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, RTValue.lastRef(arg11, (arg11 = null)), RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 10;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                case 8:
                    return arg9;
                case 9:
                    return arg10;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 10) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 15 function to 11 argument(s).
         */
        public static final class _11 extends _15 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;
            private final RTValue arg9;
            private final RTValue arg10;
            private final RTValue arg11;

            public _11 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8, final RTValue arg9, final RTValue arg10, final RTValue arg11) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null && arg9 != null && arg10 != null && arg11 != null ) : "Invalid argument value in RTPartialApp._15._11";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
                this.arg9 = arg9;
                this.arg10 = arg10;
                this.arg11 = arg11;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 4;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg15 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg14 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg13 = (currentRootNode = currentRootNode.prevArg()).getArgValue();
                RTValue arg12 = currentRootNode.prevArg().getArgValue();
                return function.f15L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            @Override
            public RTValue f4L(RTValue arg12, RTValue arg13, RTValue arg14, RTValue arg15, final RTExecutionContext ec) throws CALExecutorException {
                return function.f15L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, RTValue.lastRef(arg12, (arg12 = null)), RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 11;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                case 8:
                    return arg9;
                case 9:
                    return arg10;
                case 10:
                    return arg11;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 11) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 15 function to 12 argument(s).
         */
        public static final class _12 extends _15 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;
            private final RTValue arg9;
            private final RTValue arg10;
            private final RTValue arg11;
            private final RTValue arg12;

            public _12 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8, final RTValue arg9, final RTValue arg10, final RTValue arg11, final RTValue arg12) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null && arg9 != null && arg10 != null && arg11 != null && arg12 != null ) : "Invalid argument value in RTPartialApp._15._12";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
                this.arg9 = arg9;
                this.arg10 = arg10;
                this.arg11 = arg11;
                this.arg12 = arg12;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 3;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg15 = rootNode.getArgValue();
                RTValue currentRootNode;
                RTValue arg14 = (currentRootNode = rootNode.prevArg()).getArgValue();
                RTValue arg13 = currentRootNode.prevArg().getArgValue();
                return function.f15L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            @Override
            public RTValue f3L(RTValue arg13, RTValue arg14, RTValue arg15, final RTExecutionContext ec) throws CALExecutorException {
                return function.f15L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, RTValue.lastRef(arg13, (arg13 = null)), RTValue.lastRef(arg14, (arg14 = null)), RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 12;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                case 8:
                    return arg9;
                case 9:
                    return arg10;
                case 10:
                    return arg11;
                case 11:
                    return arg12;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 12) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 15 function to 13 argument(s).
         */
        public static final class _13 extends _15 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;
            private final RTValue arg9;
            private final RTValue arg10;
            private final RTValue arg11;
            private final RTValue arg12;
            private final RTValue arg13;

            public _13 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8, final RTValue arg9, final RTValue arg10, final RTValue arg11, final RTValue arg12, final RTValue arg13) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null && arg9 != null && arg10 != null && arg11 != null && arg12 != null && arg13 != null ) : "Invalid argument value in RTPartialApp._15._13";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
                this.arg9 = arg9;
                this.arg10 = arg10;
                this.arg11 = arg11;
                this.arg12 = arg12;
                this.arg13 = arg13;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 2;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg15 = rootNode.getArgValue();
                RTValue arg14 = rootNode.prevArg().getArgValue();
                return function.f15L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, RTValue.lastRef(arg14, (arg14 = null)), RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            @Override
            public RTValue f2L(RTValue arg14, RTValue arg15, final RTExecutionContext ec) throws CALExecutorException {
                return function.f15L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, RTValue.lastRef(arg14, (arg14 = null)), RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 13;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                case 8:
                    return arg9;
                case 9:
                    return arg10;
                case 10:
                    return arg11;
                case 11:
                    return arg12;
                case 12:
                    return arg13;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 13) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

        /**
         * WARNING- this class was automatically generated by PartialAppNodeGenerator. DO NOT MANUALLY EDIT THIS CLASS.
         * Represents an application of an arity 15 function to 14 argument(s).
         */
        public static final class _14 extends _15 {

            private final RTSupercombinator function;
            private final RTValue arg1;
            private final RTValue arg2;
            private final RTValue arg3;
            private final RTValue arg4;
            private final RTValue arg5;
            private final RTValue arg6;
            private final RTValue arg7;
            private final RTValue arg8;
            private final RTValue arg9;
            private final RTValue arg10;
            private final RTValue arg11;
            private final RTValue arg12;
            private final RTValue arg13;
            private final RTValue arg14;

            public _14 (final RTSupercombinator function, final RTValue arg1, final RTValue arg2, final RTValue arg3, final RTValue arg4, final RTValue arg5, final RTValue arg6, final RTValue arg7, final RTValue arg8, final RTValue arg9, final RTValue arg10, final RTValue arg11, final RTValue arg12, final RTValue arg13, final RTValue arg14) {
                assert (function != null && arg1 != null && arg2 != null && arg3 != null && arg4 != null && arg5 != null && arg6 != null && arg7 != null && arg8 != null && arg9 != null && arg10 != null && arg11 != null && arg12 != null && arg13 != null && arg14 != null ) : "Invalid argument value in RTPartialApp._15._14";
                this.function = function;
                this.arg1 = arg1;
                this.arg2 = arg2;
                this.arg3 = arg3;
                this.arg4 = arg4;
                this.arg5 = arg5;
                this.arg6 = arg6;
                this.arg7 = arg7;
                this.arg8 = arg8;
                this.arg9 = arg9;
                this.arg10 = arg10;
                this.arg11 = arg11;
                this.arg12 = arg12;
                this.arg13 = arg13;
                this.arg14 = arg14;
            }

            /** {@inheritDoc} */
            @Override
            public final int getArity() {
                return 1;
            }

            /** {@inheritDoc} */
            @Override
            protected final RTValue f(final RTResultFunction rootNode, final RTExecutionContext ec) throws CALExecutorException {
                RTValue arg15 = rootNode.getArgValue();
                return function.f15L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            @Override
            public RTValue f1L(RTValue arg15, final RTExecutionContext ec) throws CALExecutorException {
                return function.f15L(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, RTValue.lastRef(arg15, (arg15 = null)), ec);
            }

            /** {@inheritDoc} */
            @Override
            public final int debug_getNChildren() {
                return 14;
            }

            /** {@inheritDoc} */
            @Override
            public final CalValue debug_getChild(final int childN) {
                switch (childN) {
                case 0:
                    return arg1;
                case 1:
                    return arg2;
                case 2:
                    return arg3;
                case 3:
                    return arg4;
                case 4:
                    return arg5;
                case 5:
                    return arg6;
                case 6:
                    return arg7;
                case 7:
                    return arg8;
                case 8:
                    return arg9;
                case 9:
                    return arg10;
                case 10:
                    return arg11;
                case 11:
                    return arg12;
                case 12:
                    return arg13;
                case 13:
                    return arg14;
                default:
                    throw new IndexOutOfBoundsException();
                }
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeStartText() {
                return "(" + function.getQualifiedName();
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getNodeEndText() {
                return ")";
            }

            /** {@inheritDoc} */
            @Override
            public final String debug_getChildPrefixText(final int childN) {
                if (childN >= 0 && childN < 14) {
                    return " ";
                }
                throw new IndexOutOfBoundsException();
            }

            /** {@inheritDoc} */
            @Override
            RTSupercombinator getSupercombinator () {
                return function;
            }
        }

    }


}

