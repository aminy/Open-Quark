// Copyright (c) 2007 BUSINESS OBJECTS SOFTWARE LIMITED
// All rights reserved.
// 
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
// 
//     * Redistributions of source code must retain the above copyright notice,
//       this list of conditions and the following disclaimer.
//  
//     * Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//  
//     * Neither the name of Business Objects nor the names of its contributors
//       may be used to endorse or promote products derived from this software
//       without specific prior written permission.
//  
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.


// Strings for the generated HTML documentation
default=Default
forPrinting=For Printing

windowTitleTemplate={0} ({1})
overview=Overview
moduleSummary=Module Summary
typeClasses=Type Classes
modules=Modules
instances=Instances
types=Types
functionsClassMethodsAndDataConstructors=Functions, Class Methods and Data Constructors
functions=Functions
typeIndex=Type Index
functionalAgentIndex=Functional Agent Index
typeClassIndex=Type Class Index
instanceIndex=Instance Index
deprecatedColon=Deprecated:
returnsColon=Returns:
commaAndSpace=, 
authorColon=Author:
versionColon=Version:
seeAlsoColon=See Also:
foreignTypeColon=Foreign Type:
implementationVisibilityColon=Implementation Visibility:
caldocIndicator=[CALDoc]
metadataIndicator=[Metadata]
argumentsColon=Arguments:
returnValueIndicator=result
colon=:
importedModulesColon=Imported Modules:
friendModulesColon=Friend Modules:
directlyDependentModulesColon=Directly Dependent Modules:
indirectlyDependentModulesColon=Indirectly Dependent Modules:
dataConstructors=Data Constructors
classMethods=Class Methods
knownInstances=Known Instances
instanceMethods=Instance Methods
requiredMethodIndicator=(Required method)
optionalMethodIndicator=(Optional method)
navBarItemSeparator=\ | 

options=Options
scopeFilterColon=Scope Filter:
publicItemsOnly=Public Items Only
showAllItems=Show All Items

viewColon=View:
flat=Flat
grouped=Grouped
hierarchical=Hierarchical
expandAll=Expand All
collapseAll=Collapse All
expandButtonLabel=+
collapseButtonLabel=-

search=Search
hide=Hide
noMatches=(No matches)
enterSearchTermColon=Enter search term:
searchResultSummary=Matches for the search term {0}:
searchResultSummaryPublic={0} public item(s)
searchResultSummaryProtected={0} protected item(s)
searchResultSummaryPrivate={0} private item(s)

usageIndexEntry=Usages
mainEntry=Main Documentation Entry

usageDocArgumentTypeIndex=References to {0} in the types of arguments 
usageDocReturnTypeIndex=References to {0} in the return type
usageDocInstanceIndexInstancesOf=Instances of {0}
usageDocInstanceIndexInstancesFor=Instances for {0}

definingModuleColon=Defining Module:
dependentModuleColon=Dependent Module:

instanceDocTitle=Instances defined in {0}

// Strings for reporting errors encountered during generation
STATUS.cannotResolveForeignTypeInfo=Error encountered while attempting to generate foreign type implementation info: {0}

// Additional strings for the generated text documentation
modulesColon=Modules:
functionsAndClassMethodsColon=Functions and Class Methods:
typeConstructorsColon=Type Constructors:
dataConstructorsColon=Data Constructors:
typeClassesColon=Type Classes:

// Additional strings for CALDoc to javadoc conversion
calTypeIndicator=(CAL type: {0})

// Strings for the CALDoc tool
CALDocToolNameVersionAndCopyright=The CAL Documentation Generator (CALDocTool)        Copyright (c) 2007 Business Objects Software Limited.
STATUS.generatingDocumentationForModule=Generating documentation for {0}
STATUS.generatingUsageDocumentationForModule=Generating usage documentation for {0}
STATUS.missingArgumentForOption=Missing argument for option: {0}
STATUS.invalidOption=Invalid option: {0}

// Strings for FileSystemFileGenerator
STATUS.cannotWriteToFile=Error encountered while attempting to create the file: {0}
STATUS.errorWritingFile=Error encountered while attempting to write to the file: {0}
STATUS.generatedFile=Generated file: {0}

// Strings for CALDocl tooltips
module=Module
fieldOfDataConstructors=Field of data constructors
fieldOfDataConstructorAndSpace=Field of data constructor 
localFunction=Local function
localPatternMatchVariable=Local pattern match variable
casePatternVariable=Case pattern variable
parameterOfAndSpace=Parameter of 
parameterOfLocalFunctionAndSpace=Parameter of local function 
parameterOfLambdaExpression=Parameter of lambda expression
parameterOfInstanceMethod=Parameter of instance method
localVariable=Local variable
typeVariable=Type variable
recordFieldName=Record field name

