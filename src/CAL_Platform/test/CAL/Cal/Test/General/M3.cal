/*
 * Copyright (c) 2007 BUSINESS OBJECTS SOFTWARE LIMITED
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 *     * Redistributions of source code must retain the above copyright notice,
 *       this list of conditions and the following disclaimer.
 *  
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *  
 *     * Neither the name of Business Objects nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 *  
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */


/*
 * M3.cal
 * Creation date: Feb 28, 2003.
 * By: Edward Lam
 */

/*
 * This module contains test cases for CAL.
 */

////////////////////////////////////////////////
module Cal.Test.General.M3; 
import Cal.Test.General.M1;
import Cal.Core.Prelude;

/*
twenty :: Double;
twenty = 20.0;

thirty :: Prelude.Double;
thirty = 30.0;

zip :: Prelude.Double;
public zip = M3.zap + zap;
*/

/** The characters for 1, 2 and 3 in Chinese/Japanese. */
chinese123 = "\u4e00\u4e8c\u4e09";

//////////////////////////////////////////////////////////////////////
// A TestTypeShadowing type is declared here to explicitly shadow the one declared in the M1 module.
// This is for unit testing the TypeExpr feature of generating type expression
// strings with unqualified names unless there is an ambiguity, which in this case
// would be the ambiguity of the unqualified name TestTypeShadowing.
data TestTypeShadowing = TestTypeShadowingDC;

// Testing a single-line comment which terminates with an EOF rather than a newline character. Please do not insert anything after this comment, including newlines!!