/*
 * Copyright (c) 2007 BUSINESS OBJECTS SOFTWARE LIMITED
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 *     * Redistributions of source code must retain the above copyright notice,
 *       this list of conditions and the following disclaimer.
 *  
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *  
 *     * Neither the name of Business Objects nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 *  
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */


/*
 * Beta.cal
 * Creation date: Nov 24, 2006.
 * By: Joseph Wong
 */

/**
 * This is a test module depended upon by the JUnit tests. DO NOT MODIFY THIS FILE INDEPENDENT OF THE UNIT TESTS.
 * 
 * This is the {@em third@} module with a hierarchical module name.
 * 
 * See {@link Alpha@} (a.k.a. {@link Test.Alpha@}) and {@link Test.Beta@}.
 * 
 * @author Joseph Wong
 */
module Cal.Test.General.HierarchicalModuleName.Test.Alpha.Beta;

import Cal.Core.Prelude;

import Cal.Test.General.HierarchicalModuleName.Test.Alpha using
    function = seven;
    ;

import Cal.Test.General.HierarchicalModuleName.Test.Beta;

public eight = Test.Beta.eight;

public sixteen = Alpha.Beta.eight + Alpha.huit;

/**
 * The {@code Alpha.Beta@} appearing below refer to the {@code Beta@} data constructor (first and third occurrence)
 * and the {@code Beta@} type constructor (second occurrence) in the {@link Alpha@} module.
 * 
 * Thus the appearance of {@code Alpha.Beta.eight@} is actually a reference to the data constructor field
 * {@code eight@}, and {@em not@} to the {@link Alpha.Beta.eight@} function (a.k.a the {@link eight@} function
 * in this module).
 * 
 * The CALDoc reference {\@link Alpha.Beta\@} is ambiguous. We need to use:
 * {@unorderedList
 *   {@item {@link module = Alpha.Beta@} for a reference to this module@}
 *   {@item {@link typeConstructor = Alpha.Beta@} for the type constructor {@code Beta@} in the {@code Alpha@} module@}
 *   {@item {@link dataConstructor = Alpha.Beta@} for the data constructor {@code Beta@} in the {@code Alpha@} module@}
 * @}
 */
public eight2 = (Alpha.Beta 8 :: Alpha.Beta).Alpha.Beta.eight;


