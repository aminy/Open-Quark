/*
 * Copyright (c) 2007 BUSINESS OBJECTS SOFTWARE LIMITED
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 *     * Redistributions of source code must retain the above copyright notice,
 *       this list of conditions and the following disclaimer.
 *  
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *  
 *     * Neither the name of Business Objects nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 *  
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */


/*
 * ImportCleaner_Test_Support1.cal
 * Creation date: Feb 20/2006
 * By: James Wright
 */

/**
 * This is a support file for the ImportCleaner_Test suite of JUnit tests
 * (org.openquark.cal.compiler.ImportCleaner_Test)
 * 
 * The JUnit tests expect this module to have certain contents; if you change
 * the module, you may need to change the tests as well, and vice versa. 
 * 
 * Author: James Wright
 */
module Cal.Test.JUnitSupport.ImportCleaner_Test_Support1;
import Cal.Core.Prelude using
    typeConstructor = Unit;
    dataConstructor = 
        False, True, Left, Right, Nil, Cons, Nothing, Just, LT, EQ, GT, Unit;
    function = 
        abs, concat, equals, error, field1, field2, field3, field4, fromJust, 
        fromMaybe, fst, intToString, isEmpty, isJust, isNotANumber, isNothing;
    function = max, min, multiply, not, notANumber, output, seq, snd, upFrom, upFromTo;
    ;
import Cal.Collections.List using
    function = tail;
    ;

/* a comment */
listRoundTrip x = List.head x : tail x;

public exportedFunction = 50;

public class ExportedClass a where
    dup :: a -> a;
    ;
    
private referencePreludeFunctions = 
    (concat, equals, error, fromJust, fst, intToString, isNothing, isEmpty, max, not, output, seq, snd, field1, field2, field3, upFrom, upFromTo, fromMaybe, notANumber, isNotANumber, isJust, abs, multiply, min, field4);

private referencePreludeDataconses =
    (False, True, Left, Right, Nil, Cons, Nothing, Just, LT, EQ, GT);
